worker_processes auto;

events {
    worker_connections 1024;
}

http {
    include mime.types;
    default_type application/octet-stream;
    sendfile on;
    keepalive_timeout 65;

    proxy_cache_path /tmp/nginx_cache levels=1:2 keys_zone=public_cache:10m max_size=100m inactive=10m use_temp_path=off;
    lua_shared_dict cache_flags 1m;

    log_format access '[$date_local] [$time_local] [access] $request $status - $remote_addr $http_referer - $http_user_agent';

    access_log /dev/stdout;
    error_log /dev/stderr warn;

    server {
        listen 80;
        listen [::]:80;
        server_name _;
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        server_name bandwidth.melbourne www.bandwidth.melbourne;

        ssl_certificate /etc/nginx/certs/fullchain.pem;
        ssl_certificate_key /etc/nginx/certs/privkey.pem;

        location / {
            proxy_pass http://website-main:3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header X-Forwarded-Ssl on;
            proxy_set_header X-Forwarded-Port 443;
            proxy_redirect http:// https://;
        }

        location /public/ {
            set $cache_key $request_uri;

            access_by_lua_block {
                local cache_flags = ngx.shared.cache_flags
                local flush_flag = cache_flags:get("flush") or 0
                ngx.var.cache_key = ngx.var.cache_key .. ":" .. flush_flag
            }

            proxy_cache public_cache;
            proxy_cache_key $cache_key;
            proxy_cache_valid 200 302 10m;
            proxy_cache_use_stale error timeout updating;
            add_header X-Proxy-Cache $upstream_cache_status;

            proxy_pass http://service-public:80/public/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header X-Forwarded-Ssl on;
            proxy_set_header X-Forwarded-Port 443;
            proxy_redirect http:// https://;
        }

        location /admin/ {
            return 403;
        }
    }

    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        server_name admin.bandwidth.melbourne;

        ssl_certificate /etc/nginx/certs/fullchain.pem;
        ssl_certificate_key /etc/nginx/certs/privkey.pem;

        location / {
            proxy_pass http://website-admin:3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header X-Forwarded-Ssl on;
            proxy_set_header X-Forwarded-Port 443;
            proxy_redirect http:// https://;
        }

        location /admin/ {
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
            add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization' always;

            if ($request_method = OPTIONS) {
                add_header 'Access-Control-Allow-Origin' '*' always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
                add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization' always;
                add_header 'Access-Control-Max-Age' 86400;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }

            access_by_lua_block {
                local method = ngx.req.get_method()
                if method == "POST" or method == "PUT" or method == "DELETE" then
                    local cache_flags = ngx.shared.cache_flags
                    local flush = cache_flags:get("flush") or 0
                    cache_flags:set("flush", flush + 1)
                end
            }

            proxy_pass http://service-admin:80;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header X-Forwarded-Ssl on;
            proxy_set_header X-Forwarded-Port 443;
            proxy_redirect http:// https://;
        }

        location /public/ {
            proxy_pass http://service-public:80;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header X-Forwarded-Ssl on;
            proxy_set_header X-Forwarded-Port 443;
            proxy_redirect http:// https://;
        }
    }

    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        server_name auth.bandwidth.melbourne;

        ssl_certificate /etc/nginx/certs/fullchain.pem;
        ssl_certificate_key /etc/nginx/certs/privkey.pem;

        location / {
            proxy_pass http://service-auth:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header X-Forwarded-Ssl on;
            proxy_set_header X-Forwarded-Port 443;
            proxy_redirect http:// https://;
        }
    }

    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        server_name monitor.bandwidth.melbourne;

        ssl_certificate /etc/nginx/certs/fullchain.pem;
        ssl_certificate_key /etc/nginx/certs/privkey.pem;

        location / {
            proxy_pass http://service-monitor:5000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header X-Forwarded-Ssl on;
            proxy_set_header X-Forwarded-Port 443;
            proxy_redirect http:// https://;
        }
    }
}

services: 
  
  service-public:
    image: ghcr.io/bandwidth-gig-guide/service-public:latest
    container_name: service-public
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USER: ${SERVICE_PUBLIC_DB_USER}
      DB_PASSWORD: ${SERVICE_PUBLIC_DB_PASSWORD}
      DB_NAME: ${SERVICE_PUBLIC_DB_NAME}
    restart: unless-stopped
    networks:
      - bandwidth

  service-admin:
    image: ghcr.io/bandwidth-gig-guide/service-admin:latest
    container_name: service-admin
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USER: ${SERVICE_ADMIN_DB_USER}
      DB_PASSWORD: ${SERVICE_ADMIN_DB_PASSWORD}
      DB_NAME: ${SERVICE_ADMIN_DB_NAME}
      NEXT_PUBLIC_KEYCLOAK_URL: ${KEYCLOAK_URL}
      NEXT_PUBLIC_KEYCLOAK_REALM: ${KEYCLOAK_REALM}
      NEXT_PUBLIC_KEYCLOAK_CLIENT_ID: ${SERVICE_ADMIN_KEYCLOAK_CLIENT_ID}
    restart: unless-stopped
    networks:
      - bandwidth

  service-auth:
    image: quay.io/keycloak/keycloak:25.0.2
    container_name: service-auth
    command:
      - start
    environment:
      KC_PROXY: edge
      KC_PROXY_HEADER: xforwarded
      KC_HOSTNAME: auth.bandwidth.melbourne
      KC_HOSTNAME_STRICT: "true"
      KC_HOSTNAME_STRICT_HTTPS: "true"
      KC_HOSTNAME_ADMIN_URL: https://auth.bandwidth.melbourne
      KC_HOSTNAME_URL: https://auth.bandwidth.melbourne
      KC_FRONTEND_URL: https://auth.bandwidth.melbourne
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://${SERVICE_AUTH_DB_HOST}:${SERVICE_AUTH_DB_PORT}/${SERVICE_AUTH_DB_NAME}
      KC_DB_USERNAME: ${SERVICE_AUTH_DB_USER}
      KC_DB_PASSWORD: ${SERVICE_AUTH_DB_PASSWORD}
      KEYCLOAK_ADMIN: ${SERVICE_AUTH_KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${SERVICE_AUTH_KEYCLOAK_ADMIN_PASSWORD}
      KC_HEALTH_ENABLED: "true"
      KC_METRICS_ENABLED: "true"
    restart: unless-stopped
    volumes:
      - service-auth-data:/opt/keycloak/data
    networks:
      - bandwidth

  service-monitor:
    image: ghcr.io/dgtlmoon/changedetection.io:latest
    container_name: service-monitor
    volumes:
      - service-monitor-data:/datastore
      - /dev/shm:/dev/shm
    restart: unless-stopped
    networks:
      - bandwidth

  website-main:
    image: ghcr.io/bandwidth-gig-guide/website-main:latest
    container_name: website-main
    restart: unless-stopped
    networks:
      - bandwidth

  website-admin:
    image: ghcr.io/bandwidth-gig-guide/website-admin:latest
    container_name: website-admin
    restart: unless-stopped
    networks:
      - bandwidth

  reverse-proxy:
    image: caddy:2-alpine
    container_name: reverse-proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./reverse-proxy-data:/data
      - ./reverse-proxy-config:/config
      - ./Caddyfile:/etc/caddy/Caddyfile
    depends_on:
      - website-main
      - website-admin
      - service-public
      - service-auth
      - service-admin
      - service-monitor
    networks:
      - bandwidth

volumes:
  reverse-proxy-data:
  reverse-proxy-config:
  service-auth-data:
  service-monitor-data:

networks:
  bandwidth:
    driver: bridge